{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-08dd5f43\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Create an account\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"role\"\n}, \"Role\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"admin\"\n}, \" Admin \", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"user\"\n}, \" User \", -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_6, _hoisted_7];\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"checkbox\"\n}, \"Accept terms and condition\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Sign up \")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.validateForm && $options.validateForm(...args), [\"prevent\"]))\n  }, [_hoisted_1, _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _ctx.validatePassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.validatePassword), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.role = $event)\n  }, _hoisted_8, 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.role]]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.terms = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.terms]]), _hoisted_9]), _hoisted_10], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;gEAIEA,oBAA0B,YAAtB,mBAAiB;gEACrBA,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gEAExBD,oBAAsC;EAA/BC,GAAG,EAAC;AAAU,GAAC,UAAQ;;;EAEDC,KAAK,EAAC;;gEAErCF,oBAA8B;EAAvBC,GAAG,EAAC;AAAM,GAAC,MAAI;gEAEtBD,oBAAsC;EAA9BG,KAAK,EAAC;AAAO,GAAC,SAAO;gEAC7BH,oBAAoC;EAA5BG,KAAK,EAAC;AAAM,GAAC,QAAM;oBAD3BC,UAAsC,EACtCC,UAAoC;gEAMpCL,oBAAwD;EAAjDC,GAAG,EAAC;AAAU,GAAC,4BAA0B;iEAGhDD,oBAEM;EAFDE,KAAK,EAAC;AAAQ,iBACfF,oBAAyB,gBAAjB,UAAQ;;;uBAvBpBM,oBA4BM,cA1BJN,oBAuBK;IAvBEO,QAAM,wDAAWC,uDAAY;MACpCC,UAA0B,EAC1BC,UAAgC,kBAChCV,oBAA6C;IAAtCW,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,UAAK;iDAALA,UAAK,KAC3CC,UAAsC,kBACtCd,oBAAmD;IAA5CW,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,aAAQ;iDAARA,aAAQ,KACtCA,qBAAgB,kBAA3BP,oBAAsE,OAAtES,UAAsE,mBAAxBF,qBAAgB,uDAEhEG,UAA8B,kBAC9BhB,oBAGS;+DAHQa,SAAI;yDAAJA,SAAI,KAKrBb,oBAIM,8BAFNA,oBAAgD;IAAzCW,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,UAAK;qDAALA,UAAK,KAC9CI,UAAwD,IAGxDC,WAEM","names":["_createElementVNode","for","class","value","_hoisted_6","_hoisted_7","_createElementBlock","onSubmit","$options","_hoisted_1","_hoisted_2","type","required","_ctx","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_9","_hoisted_10"],"sourceRoot":"","sources":["/Users/anhelinalohvina/homework3wad/src/views/FormView.vue"],"sourcesContent":["<template>\n<div>\n    \n  <form @submit.prevent =\"validateForm\">\n  <h2>Create an account</h2>\n  <label for=\"email\">Email</label>\n  <input type=\"email\" required v-model=\"email\">\n  <label for=\"password\">Password</label>\n  <input type=\"password\" required v-model=\"password\">\n  <div v-if=\"validatePassword\" class=\"error\"> {{validatePassword}}</div>\n\n<label for=\"role\">Role</label>\n<select v-model=\"role\">\n<option value=\"admin\"> Admin </option>\n<option value=\"user\"> User </option>\n</select>\n\n<div>\n\n<input type=\"checkbox\" required v-model=\"terms\">\n<label for=\"checkbox\">Accept terms and condition</label>\n</div>\n\n<div class=\"submit\">\n    <button>Sign up </button>\n</div>\n</form>\n\n\n</div>\n\n\n</template>\n\n<script>\nexport default {\nname: \"FormView\", \n\ndata: function() {\n    return {\n   email: '',\n   password: '',\n   role: '',\n   terms: false,\n   validatePassword:'',\n  }},\n  methods: {\n   /* Validate password */\n   validateForm(){\n   console.log('signup is submitted');\n   this.validatePassword = (this.password.length <8 || this.password> 15)? 'password must be between 8-15 chars':''\n   console.log(this.validatePassword);\n   let regex = /[a-z]+[A-Z]+[0-9]+_+/\n   console.log(regex.test(this.password));\n   console.log(this.password);\n   this.validatePassword = regex.test(this.password)? '':'password must contain a combination of Uppercase characters (A-Z), Lowercase characters (a-z), Digits (0-9), and _'\n   }\n  }\n}\n</script>\n\n<style scoped>\nform {\n  max-width: 420px;\n  margin: 30px auto;\n  background:  rgb(167, 154, 154);\n  text-align: left;\n  padding: 40px;\n  border-radius: 10px;\n}\n\nlabel {\n    color: rgb(8, 110, 110);\n    display: inline-block;\n    margin: 25px 0 15px;\n    font-size: 0.8em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput{\ndisplay: block;\npadding: 10px 6px;\nwidth: 100%;\nbox-sizing: border-box;\nborder: none;\nborder-bottom: 1px solid white;\ncolor: blue;\n}\ninput[type=\"checkbox\"]{\n    display: inline-block;\n    width: 16px;\n    margin:  0 10px 0 0;\n    position: relative;\n    top: 2px;\n}\nbutton{\nbackground:  rgb(8, 110, 110);\nborder: 0;\npadding: 10px 20px;\nmargin-top:  20px;\ncolor: white;\nborder-radius: 20px;\n}\nh2, .submit{\n    text-align: center;\n}\n.error{\n    color: red;\n    font-size: 0.8em;\n    margin-top:  10px;\n    text-align: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}