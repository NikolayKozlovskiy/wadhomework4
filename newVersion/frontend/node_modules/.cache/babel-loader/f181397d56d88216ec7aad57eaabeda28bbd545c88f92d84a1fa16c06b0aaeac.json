{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9b44fb52\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"A Post\"\n};\nconst _hoisted_2 = {\n  id: \"form\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"A Post\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title: \", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"body\"\n}, \"Body: \", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"url\"\n}, \"Url: \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    name: \"type\",\n    type: \"text\",\n    id: \"title\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.post.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.title]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    name: \"body\",\n    type: \"text\",\n    id: \"body\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.post.body = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.body]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    name: \"url\",\n    type: \"text\",\n    id: \"url\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.post.urllink = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.urllink]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.updatePost && $options.updatePost(...args)),\n    class: \"updatePost\"\n  }, \"Update Post\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.deletePost && $options.deletePost(...args)),\n    class: \"deletePost\"\n  }, \"Delete Post\")])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAQ;;EACZC,EAAE,EAAC;AAAM;gEACZC,oBAAe,YAAX,QAAM;gEACVA,oBAAkC;EAA3BC,GAAG,EAAC;AAAO,GAAC,SAAO;gEAE1BD,oBAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;gEAExBD,oBAA8B;EAAvBC,GAAG,EAAC;AAAK,GAAC,OAAK;;;uBAP1BC,oBAcM,OAdNC,UAcM,GAbJH,oBAQM,OARNI,UAQM,GAPJC,UAAe,EACfC,UAAkC,kBAClCN,oBAA0E;IAAnEO,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACT,EAAE,EAAC,OAAO;IAACU,QAAQ,EAAR,EAAQ;+DAAUC,UAAI,CAACC,KAAK;iDAAVD,UAAI,CAACC,KAAK,KACtEC,UAAgC,kBAChCZ,oBAAwE;IAAjEO,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACT,EAAE,EAAC,MAAM;IAACU,QAAQ,EAAR,EAAQ;+DAAUC,UAAI,CAACG,IAAI;iDAATH,UAAI,CAACG,IAAI,KACpEC,UAA8B,kBAC9Bd,oBAAyE;IAAlEO,IAAI,EAAC,KAAK;IAACC,IAAI,EAAC,MAAM;IAACT,EAAE,EAAC,KAAK;IAACU,QAAQ,EAAR,EAAQ;+DAAUC,UAAI,CAACK,OAAO;iDAAZL,UAAI,CAACK,OAAO,OAEvEf,oBAGM,cAFJA,oBAAmE;IAA1DgB,OAAK,yCAAEC,mDAAU;IAAEnB,KAAK,EAAC;KAAa,aAAW,GAC1DE,oBAAmE;IAA1DgB,OAAK,yCAAEC,mDAAU;IAAEnB,KAAK,EAAC;KAAa,aAAW","names":["class","id","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","name","type","required","$data","title","_hoisted_5","body","_hoisted_6","urllink","onClick","$options"],"sourceRoot":"","sources":["/Users/anhelinalohvina/lab13/WAD2022-Lab13-Frontend/src/views/APost.vue"],"sourcesContent":["<template>\n  <div class=\"A Post\">\n    <div id=\"form\">\n      <h3>A Post</h3>\n      <label for=\"title\">Title: </label>\n      <input name=\"type\" type=\"text\" id=\"title\" required v-model=\"post.title\" />\n      <label for=\"body\">Body: </label>\n      <input name=\"body\" type=\"text\" id=\"body\" required v-model=\"post.body\" />\n      <label for=\"url\">Url: </label>\n      <input name=\"url\" type=\"text\" id=\"url\" required v-model=\"post.urllink\" />\n    </div>\n    <div>\n      <button @click=\"updatePost\" class=\"updatePost\">Update Post</button>\n      <button @click=\"deletePost\" class=\"deletePost\">Delete Post</button>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"APost\",\n  data() {\n    return {\n      post: {\n        id: \"\",\n        title: \"\",\n        body: \"\",\n        urllink: \"\",\n      },\n    };\n  },\n  methods: {\n    fetchAPost(id) {\n      // fetch one post with the specied id (id)\n      fetch('http://localhost:3000/api/posts/${id}')\n        .then((response) => response.json())\n        .then((data) => (this.post = data))\n        .catch((err) => console.log(err.message));\n    },\n    updatePost() {\n      // using Fetch - put method - updates a specific post based on the passed id and the specified body\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.post),\n      })\n        .then((response) => {\n          console.log(response.data);\n          //this.$router.push(\"/apost/\" + this.post.id);\n          // We are using the router instance of this element to navigate to a different URL location\n          this.$router.push(\"/api/allposts\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    deletePost() {\n      // using Fetch - delete method - delets a specific post based on the passed id\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          console.log(response.data);\n          // We are using the router instance of this element to navigate to a different URL location\n          this.$router.push(\"/api/allposts\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n  mounted() {\n    // call fetchAPost() when this element mounts, and pass to it a route parameter  (id)\n    // Route parameters (this.$route.params.id) are named URL segments that are used to capture the values specified at their \n    // position in the URL. The captured values are populated in the req.params object, with the name \n    // of the route parameter specified in the path as their respective keys\n    this.fetchAPost(this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped>\n#form {\n  max-width: 420px;\n  margin: 30px auto;\n  background: rgb(167, 154, 154);\n  text-align: left;\n  padding: 40px;\n  border-radius: 10px;\n}\nh3 {\n  text-align: center;\n  color: rgb(8, 110, 110);\n}\nlabel {\n  color: rgb(8, 110, 110);\n  display: inline-block;\n  margin: 25px 0 15px;\n  font-size: 0.8em;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\ninput {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid white;\n  color: blue;\n}\nbutton {\n  background: rgb(8, 110, 110);\n  border: 0;\n  padding: 10px 20px;\n  margin-top: 20px;\n  color: white;\n  border-radius: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}