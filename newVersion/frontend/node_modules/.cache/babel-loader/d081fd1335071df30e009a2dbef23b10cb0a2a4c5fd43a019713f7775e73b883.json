{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"APost\",\n  data() {\n    return {\n      post: {\n        id: \"\",\n        title: \"\",\n        body: \"\",\n        urllink: \"\"\n      }\n    };\n  },\n  methods: {\n    fetchAPost(id) {\n      // fetch one post with the specied id (id)\n      fetch('http://localhost:3000/api/posts/${id}').then(response => response.json()).then(data => this.post = data).catch(err => console.log(err.message));\n    },\n    updatePost() {\n      // using Fetch - put method - updates a specific post based on the passed id and the specified body\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.post)\n      }).then(response => {\n        console.log(response.data);\n        //this.$router.push(\"/apost/\" + this.post.id);\n        // We are using the router instance of this element to navigate to a different URL location\n        this.$router.push(\"/api/allposts\");\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    deletePost() {\n      // using Fetch - delete method - delets a specific post based on the passed id\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        console.log(response.data);\n        // We are using the router instance of this element to navigate to a different URL location\n        this.$router.push(\"/api/allposts\");\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    // call fetchAPost() when this element mounts, and pass to it a route parameter  (id)\n    // Route parameters (this.$route.params.id) are named URL segments that are used to capture the values specified at their \n    // position in the URL. The captured values are populated in the req.params object, with the name \n    // of the route parameter specified in the path as their respective keys\n    this.fetchAPost(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";AAoBA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACL,EAAE,EAAE;MACb;MACAM,KAAK,CAAC,uCAAuC,EAC1CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAClCF,IAAI,CAAET,IAAI,IAAM,IAAI,CAACC,IAAG,GAAID,IAAK,EACjCY,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC;IAC7C,CAAC;IACDC,UAAU,GAAG;MACX;MACAT,KAAK,CAAE,mCAAkC,IAAI,CAACP,IAAI,CAACC,EAAG,EAAC,EAAE;QACvDgB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDf,IAAI,EAAEgB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACpB,IAAI;MAChC,CAAC,EACEQ,IAAI,CAAEC,QAAQ,IAAK;QAClBI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACV,IAAI,CAAC;QAC1B;QACA;QACA,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACpC,CAAC,EACAX,KAAK,CAAEY,CAAC,IAAK;QACZV,OAAO,CAACC,GAAG,CAACS,CAAC,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,GAAG;MACX;MACAjB,KAAK,CAAE,mCAAkC,IAAI,CAACP,IAAI,CAACC,EAAG,EAAC,EAAE;QACvDgB,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,EACEV,IAAI,CAAEC,QAAQ,IAAK;QAClBI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACV,IAAI,CAAC;QAC1B;QACA,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACpC,CAAC,EACAX,KAAK,CAAEY,CAAC,IAAK;QACZV,OAAO,CAACC,GAAG,CAACS,CAAC,CAAC;MAChB,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAO,GAAG;IACR;IACA;IACA;IACA;IACA,IAAI,CAACnB,UAAU,CAAC,IAAI,CAACoB,MAAM,CAACC,MAAM,CAAC1B,EAAE,CAAC;EACxC;AACF,CAAC","names":["name","data","post","id","title","body","urllink","methods","fetchAPost","fetch","then","response","json","catch","err","console","log","message","updatePost","method","headers","JSON","stringify","$router","push","e","deletePost","mounted","$route","params"],"sourceRoot":"","sources":["/Users/anhelinalohvina/lab13/WAD2022-Lab13-Frontend/src/views/APost.vue"],"sourcesContent":["<template>\n  <div class=\"A Post\">\n    <div id=\"form\">\n      <h3>A Post</h3>\n      <label for=\"title\">Title: </label>\n      <input name=\"type\" type=\"text\" id=\"title\" required v-model=\"post.title\" />\n      <label for=\"body\">Body: </label>\n      <input name=\"body\" type=\"text\" id=\"body\" required v-model=\"post.body\" />\n      <label for=\"url\">Url: </label>\n      <input name=\"url\" type=\"text\" id=\"url\" required v-model=\"post.urllink\" />\n    </div>\n    <div>\n      <button @click=\"updatePost\" class=\"updatePost\">Update Post</button>\n      <button @click=\"deletePost\" class=\"deletePost\">Delete Post</button>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"APost\",\n  data() {\n    return {\n      post: {\n        id: \"\",\n        title: \"\",\n        body: \"\",\n        urllink: \"\",\n      },\n    };\n  },\n  methods: {\n    fetchAPost(id) {\n      // fetch one post with the specied id (id)\n      fetch('http://localhost:3000/api/posts/${id}')\n        .then((response) => response.json())\n        .then((data) => (this.post = data))\n        .catch((err) => console.log(err.message));\n    },\n    updatePost() {\n      // using Fetch - put method - updates a specific post based on the passed id and the specified body\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.post),\n      })\n        .then((response) => {\n          console.log(response.data);\n          //this.$router.push(\"/apost/\" + this.post.id);\n          // We are using the router instance of this element to navigate to a different URL location\n          this.$router.push(\"/api/allposts\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    deletePost() {\n      // using Fetch - delete method - delets a specific post based on the passed id\n      fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          console.log(response.data);\n          // We are using the router instance of this element to navigate to a different URL location\n          this.$router.push(\"/api/allposts\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n  mounted() {\n    // call fetchAPost() when this element mounts, and pass to it a route parameter  (id)\n    // Route parameters (this.$route.params.id) are named URL segments that are used to capture the values specified at their \n    // position in the URL. The captured values are populated in the req.params object, with the name \n    // of the route parameter specified in the path as their respective keys\n    this.fetchAPost(this.$route.params.id);\n  },\n};\n</script>\n\n<style scoped>\n#form {\n  max-width: 420px;\n  margin: 30px auto;\n  background: rgb(167, 154, 154);\n  text-align: left;\n  padding: 40px;\n  border-radius: 10px;\n}\nh3 {\n  text-align: center;\n  color: rgb(8, 110, 110);\n}\nlabel {\n  color: rgb(8, 110, 110);\n  display: inline-block;\n  margin: 25px 0 15px;\n  font-size: 0.8em;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\ninput {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid white;\n  color: blue;\n}\nbutton {\n  background: rgb(8, 110, 110);\n  border: 0;\n  padding: 10px 20px;\n  margin-top: 20px;\n  color: white;\n  border-radius: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}