{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-08dd5f43\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Signup \")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.validateForm && $options.validateForm(...args), [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _ctx.validatePassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.validatePassword), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_4], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;gEAIEA,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gEAExBD,oBAAsC;EAA/BC,GAAG,EAAC;AAAU,GAAC,UAAQ;;;EAEDC,KAAK,EAAC;;gEAEnCF,oBAEM;EAFDE,KAAK,EAAC;AAAQ,iBACfF,oBAAwB,gBAAhB,SAAO;;;uBAVrBG,oBAeM,cAbJH,oBAUK;IAVEI,QAAM,wDAAWC,uDAAY;MACpCC,UAAgC,kBAChCN,oBAAiE;IAA1DO,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,UAAK;iDAALA,UAAK,KAC/DC,UAAsC,kBACtCX,oBAA0E;IAAnEO,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,aAAQ;iDAARA,aAAQ,KAC7DA,qBAAgB,kBAA3BP,oBAAsE,OAAtES,UAAsE,mBAAxBF,qBAAgB,uDAE9DG,UAEM","names":["_createElementVNode","for","class","_createElementBlock","onSubmit","$options","_hoisted_1","type","placeholder","required","_ctx","_hoisted_2","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\79219\\WAD\\wad_homework_3\\homework3wad\\src\\views\\FormView.vue"],"sourcesContent":["<template>\r\n<div>\r\n    \r\n  <form @submit.prevent =\"validateForm\">\r\n  <label for=\"email\">Email</label>\r\n  <input type=\"email\" placeholder=\"Email\" required v-model=\"email\">\r\n  <label for=\"password\">Password</label>\r\n  <input type=\"password\" placeholder=\"Password\" required v-model=\"password\">\r\n  <div v-if=\"validatePassword\" class=\"error\"> {{validatePassword}}</div>\r\n\r\n  <div class=\"submit\">\r\n      <button>Signup </button>\r\n  </div>\r\n</form>\r\n\r\n\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\nname: \"FormView\", \r\n\r\ndata: function() {\r\n    return {\r\n   email: '',\r\n   password: '',\r\n   role: '',\r\n   terms: false,\r\n   validatePassword:'',\r\n  }},\r\n  methods: {\r\n   /* Validate password */\r\n   validateForm(){\r\n   console.log('signup is submitted');\r\n   this.validatePassword = (this.password.length <8 || this.password> 15)? 'password must be between 8-15 chars':''\r\n   console.log(this.validatePassword);\r\n   let regex = /[a-z]+[A-Z]+[0-9]+_+/\r\n   console.log(regex.test(this.password));\r\n   console.log(this.password);\r\n   this.validatePassword = regex.test(this.password)? '':'password must contain a combination of Uppercase characters (A-Z), Lowercase characters (a-z), Digits (0-9), and _'\r\n   }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  max-width: 420px;\r\n  margin: 10px auto;\r\n  background:  rgb(208,240,192);\r\n  border-radius: 20px;\r\n  text-align: left;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\nlabel {\r\n    color: black;\r\n    display: inline-block;\r\n}\r\n\r\ninput{\r\ndisplay: block;\r\npadding: 10px 6px;\r\nwidth: 60%;\r\ntext-align: center;\r\nbox-sizing: border-box;\r\nborder-radius: 20px;\r\nborder: none;\r\nborder-bottom: 1px solid white;\r\ncolor: blue;\r\n}\r\n\r\nbutton{\r\nbackground:  rgb(137, 207, 240);\r\nborder: 0;\r\npadding: 5px 20px;\r\nmargin-top:  15px;\r\ncolor: black;\r\nborder-radius: 20px;\r\n}\r\nh2, .submit{\r\n    text-align: center;\r\n}\r\n\r\n\r\n.error{\r\n    color: red;\r\n    font-size: 0.8em;\r\n    margin-top:  10px;\r\n    text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}