{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddPost\",\n  data() {\n    return {\n      post: {\n        title: \"\",\n        body: \"\",\n        urllink: \"\"\n      }\n    };\n  },\n  methods: {\n    addPost() {\n      var data = {\n        title: this.post.title,\n        body: this.post.body,\n        urllink: this.post.urllink\n      };\n      // using Fetch - post method - send an HTTP post request to the specified URI with the defined body\n      fetch(\"http://localhost:3000/api/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        console.log(response.data);\n        // redirect to /allposts view\n        this.$router.push(\"/api/allposts\");\n      }).catch(e => {\n        console.log(e);\n        console.log(\"error\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAsDA,eAAe;EACbA,IAAI,EAAE,SAAS;EACfC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,GAAG;MACR,IAAIN,IAAG,GAAI;QACTE,KAAK,EAAE,IAAI,CAACD,IAAI,CAACC,KAAK;QACtBC,IAAI,EAAE,IAAI,CAACF,IAAI,CAACE,IAAI;QACpBC,OAAO,EAAE,IAAI,CAACH,IAAI,CAACG;MACrB,CAAC;MACD;MACAG,KAAK,CAAC,iCAAiC,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CAAC,EACAY,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACb,IAAI,CAAC;QAC1B;QACA,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACpC,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;QACdL,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["name","data","post","title","body","urllink","methods","addPost","fetch","method","headers","JSON","stringify","then","response","console","log","$router","push","catch","e"],"sourceRoot":"","sources":["/Users/anhelinalohvina/wadhomework4/frontend/src/components/getPost.vue"],"sourcesContent":["<template>\n\n   <div class=\"logout\">\n      <button v-on:click=\"zero\">Logout</button>\n   </div>\n\n    <div class=\"post\" v-for=\"post in posts\" :key=\"post.post_id\"> \n      \n      <div v-if = False>\n        <h1>{{photo}}</h1>\n      </div>\n       <div class=\"post-header\">\n          <div class=\"post-date\">{{post.date}}</div>\n        </div>\n        <div class=\"post-content\">\n\n          <div class=\"post-contentItem\">\n          </div>\n\n          <div class=\"post-contentItem\">{{post.body}}</div>\n        </div>\n      <!-- <p>  <b> Body: </b> {{post.body}} </p> -->\n    </div>\n\n    <button @click=\"addPost\" class=\"addPost\">Add Post</button>\n</template>\n\n\n<!--<script>\nexport default {\n    name: \"getPost\",\n    methods: {\n\n      addlike: function(post_id){\n        this.$store.commit(\"addlike\", {post_id})\n        \n      },\n      \n      zero: function(){\n        this.$store.commit(\"zero\")\n      }\n    },\n    computed: {\n      \n      posts () { \n        \n  return this.$store.getters.postsget}\n    }\n}\n</script> -->\n\n\n\n<script>\nexport default {\n  name: \"AddPost\",\n  data() {\n    return {\n      post: {\n        title: \"\",\n        body: \"\",\n        urllink: \"\",\n      },\n    };\n  },\n  methods: {\n    addPost() {\n      var data = {\n        title: this.post.title,\n        body: this.post.body,\n        urllink: this.post.urllink,\n      };\n      // using Fetch - post method - send an HTTP post request to the specified URI with the defined body\n      fetch(\"http://localhost:3000/api/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n      .then((response) => {\n        console.log(response.data);\n        // redirect to /allposts view\n        this.$router.push(\"/api/allposts\");\n      })\n      .catch((e) => {\n        console.log(e);\n        console.log(\"error\");\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n\n.reset{\n  text-align:center;\n  width: 75px;\n  height: 20px;\n  margin: 0 auto;\n  }\n\nbody {\n    line-height: 1.6;\n    font-size: 600px;\n}\n.post {\n  padding: 16px;\n  border-radius: 12px;\n  background-color: #A9A9A9;\n  margin-bottom: 40px;\n}\n\n.logout{\n    text-align:center;\n    //align-items: center;\n    margin-bottom: 20px;\n}\n\n.deleteAll{\n    text-align:right;\n    //align-items: center;\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n  margin-bottom: 8px;\n}\n\n.post-bottom {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n  margin-top: 8px;\n}\n\n\n.post-profile {\n  flex: 0 0 auto;\n}\n\n.profilePlate-image {\n  display: inline-block;\n  height: 40px;\n  width: 40px;\n  object-fit: cover; /* to avoid image distortion */\n  vertical-align: top;\n}\n\n.post-image {\n  display: inline-block;\n  width: 100%;\n  vertical-align: top;\n  margin-bottom: 8px;\n}\n\n.post-image-like {\n  display: inline-block;\n  width: 10%;\n  vertical-align: bottom;\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}